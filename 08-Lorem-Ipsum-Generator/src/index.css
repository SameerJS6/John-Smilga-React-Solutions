@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Primary */
  --primary: 79 102 0;
  --on-primary: 255 255 255;
  --primary-container: 204 240 102;
  /* Secondary */
  --secondary-container: 223 230 196;
  --on-secondary-container: 24 30 9;
  /* Tertiary */
  --tertiary-container: 188 236 226;
  --on-tertiary-container: 0 31 27;
  /* Error */
  --error: 186 26 26;
  --on-error: 255 255 255;
  /* Input Field */
  --on-surface-rgb: 27 28 23;
  /* Main-Background-Color  */
  --background: #fefcf4;
  --on-background: #1b1c17;
  --github: #24292f;

  /* Shadows */
  --shadow-rgb: 0 0 0;
  --elevation-1: 0px 3px 1px -2px rgb(var(--shadow-rgb) / 0.2),
    0px 2px 2px 0px rgb(var(--shadow-rgb) / 0.14),
    0px 1px 5px 0px rgb(var(--shadow-rgb) / 0.12);
  --elevation-2: 0px 2px 4px -1px rgb(var(--shadow-rgb) / 0.2),
    0px 4px 5px 0px rgb(var(--shadow-rgb) / 0.14),
    0px 1px 10px 0px rgb(var(--shadow-rgb) / 0.12);
  --elevation-3: 0px 5px 5px -3px rgb(var(--shadow-rgb) / 0.2),
    0px 8px 10px 1px rgb(var(--shadow-rgb) / 0.14),
    0px 3px 14px 2px rgb(var(--shadow-rgb) / 0.12);

  --font: "Roboto", sans-serif;
}
.darkMode {
  /* Primary */
  --primary: 176 212 77;
  --on-primary: 40 53 0;
  --primary-container: 59 77 0;
  /* Secondary */
  --secondary-container: 67 73 49;
  --on-secondary-container: 223 230 196;
  /* Tertiary */
  --tertiary-container: 32 78 71;
  --on-tertiary-container: 188 236 226;
  /* Error */
  --error: 255 180 171;
  --on-error: 10 0 5;
  /* Input Field */
  --on-surface-rgb: 228 227 219;
  /* Main-Background-Color */
  --background: #1b1c17;
  --on-background: #e4e3db;
}
html {
  scroll-behavior: smooth;
}
body {
  display: grid;
  min-height: 100vh;
  min-height: 100dvh;
  font-family: var(--font);
  background-color: var(--background);
  transition: background-color 500ms ease, color 500ms ease;
}
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
input[type="number"] {
  -moz-appearance: textfield;
}

/* Scrollbar for Body  */
::-webkit-scrollbar {
  width: 7px;
  border-radius: 100vmax;
}
::-webkit-scrollbar-track {
  background: var(--background);
  margin-block: 0.5rem;
}
::-webkit-scrollbar-thumb {
  background: rgb(var(--primary));
  border-radius: 100vmax;
}
@supports (scrollbar-color: olive black) {
  * {
    scrollbar-color: rgb(var(--primary)) var(--background);
    scrollbar-width: thin;
  }
}
/* Scrollbar for TextArea  */

.textarea::-webkit-scrollbar {
  width: 5px;
  border-radius: 100vmax;
}
.textarea::-webkit-scrollbar-track {
  background: rgb(var(--tertiary-container));
  margin-block: 0.25rem;
}
.textarea::-webkit-scrollbar-thumb {
  background: rgb(var(--on-tertiary-container));
  border-radius: 1rem;
}
@supports (scrollbar-color: green blue) {
  .textarea {
    scrollbar-color: rgb(var(--on-tertiary-container))
      rgb(var(--tertiary-container));
    scrollbar-width: thin;
  }
}

/* Go Back Hover Animations  */
.btn {
  overflow: hidden;
  color: var(--on-background);
  background-color: rgb(var(--primary-container));
}

.btn:hover > span > span {
  animation: MoveUpInitial 0.2s forwards, MoveUpEnd 0.2s forwards 0.2s;
}

@keyframes MoveUpInitial {
  to {
    transform: translate3d(0, -105%, 0);
  }
}

@keyframes MoveUpEnd {
  from {
    transform: translate3d(0, 100%, 0);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.btn::before {
  content: "";
  background: rgb(var(--primary-container));
  transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
  transform-origin: 100% 50%;
}

.btn:hover::before {
  transform: scale3d(0, 1, 1);
  transform-origin: 0% 50%;
}

.btn-2 {
  pointer-events: auto;
  cursor: pointer;
  border: none;
  position: relative;
  display: inline-block;
  background: rgb(var(--tertiary-container));
}

.btn-2::before,
.btn-2::after {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Title Stroke  */

.title-stroke {
  --stroke: 1px;

  color: transparent;
  transition: all 500ms ease;
  -webkit-text-stroke: var(--stroke) var(--on-background);
}
.title-stroke:hover {
  color: rgb(var(--primary));
  -webkit-text-stroke: var(--stroke) transparent;
}
.border-style:before {
  --border-size: 5px;
  --border-distance: -3px;

  content: "";
  position: absolute;
  inset: var(--border-distance);
  border: var(--border-size) dashed var(--on-background);
}
@media (min-width: 600px) {
  .title-stroke {
    --stroke: 2px;
  }
  .border-style::before {
    --border-size: 10px;
    --border-distance: -7px;
  }
}
.generate {
  scroll-behavior: smooth;
}
/* Loading-Bar Styles  */
.popup[data-bar="false"]::after,
.notifications[data-line="false"]::after,
.popup[data-bar="true"]::after,
.notifications[data-line="true"]::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 4px;
  width: 100%;
  transform: scaleX(0);
  background: rgb(var(--error));
  transform-origin: left;
  box-shadow: 0px 0px 60px 0px rgba(255, 0, 0, 1);
}
.notifications[dar-line="false"]::after,
.notifications[data-line="true"]::after {
  height: 3px;
  background: rgb(var(--primary));
  box-shadow: 0 0 50px 1px rgb(var(--primary));
}

.popup[data-bar="true"]::after {
  transform: scaleX(1);
  transition: transform 4000ms ease-in-out;
}
.notifications[data-line="true"]::after {
  transform: scaleX(1);
  transition: transform 2500ms ease-in-out;
}
.notifications {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cg fill='%2322c55e' fill-opacity='0.06'%3E%3Cpolygon fill-rule='evenodd' points='8 4 12 6 8 8 6 12 4 8 0 6 4 4 6 0 8 4'/%3E%3C/g%3E%3C/svg%3E");
}

/* Linear Gradient Background for Error  */
.section[data-overlay="true"]::after,
.section[data-overlay="false"]::after {
  content: "";
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms ease;
  background: linear-gradient(to bottom, #00000015, #000000d3);
}
.section[data-overlay="true"]::after {
  opacity: 1;
  pointer-events: auto;
}

/* For Ripple Effect */
.effect-container {
  position: relative;
  overflow: hidden;

  --effect-duration: 1000ms;
  --top: 0px;
  --left: 0px;
  --color: lime;
  --width: 100px;
  --height: 100px;
}
.effect-container::before {
  content: "";
  position: absolute;
  opacity: 0.3;

  top: var(--top);
  left: var(--left);
  width: var(--width);
  height: var(--height);
  border-radius: 50%;
  transform: scale(0);
  background: var(--color);
}
.effect-container.active::before {
  animation: ripple var(--effect-duration) linear forwards;
}
@keyframes ripple {
  to {
    transform: scale(5);
    opacity: 0;
  }
}
